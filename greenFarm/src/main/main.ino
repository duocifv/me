#include <Arduino.h>

#include "wifi_module.h"
#include "api_module.h"
#include "dht_module.h"
#include "ds18b20_module.h"
#include "json_builder.h"
#include "relay_module.h"
#include "camera_module.h"
#include "led_indicator.h"

// Th√¥ng tin WiFi v√† API
const char *ssid        = "Mai Lan";
const char *password    = "1234567899";
const char *apiUrl      = "https://my.duocnv.top/v1/hydroponics/snapshots";
const char *deviceToken = "esp32";
const char *deviceId    = "device-001";

// Kh·ªüi t·∫°o c√°c module
WifiModule    wifi(ssid, password);
ApiModule     api(apiUrl, deviceToken, deviceId);
DHTModule     dht;
DS18B20Module ds18b20;
RelayModule   pumpRelay(12);
LedIndicator  error(4);
// CameraModule camera;   // N·∫øu c·∫ßn d√πng camera, m·ªü d√≤ng n√†y

// B·ªô ƒë·ªám JSON
char jsonBuffer[512];

void setup() {
  Serial.begin(115200);
  delay(1000);

  // K·∫øt n·ªëi WiFi
  wifi.connect();

  // Kh·ªüi ƒë·ªông DHT22
  dht.begin();

  // Kh·ªüi ƒë·ªông DS18B20
  ds18b20.begin();

  // Kh·ªüi ƒë·ªông API (n·∫øu c√≥ c·∫•u h√¨nh g√¨ th√™m)
  api.begin();

  // (Tu·ª≥ ch·ªçn) Kh·ªüi ƒë·ªông camera
  // if (!camera.begin()) {
  //   Serial.println("‚ùå Kh·ªüi t·∫°o camera th·∫•t b·∫°i");
  // } else {
  //   Serial.println("‚úÖ Camera ƒë√£ s·∫µn s√†ng");
  // }

  // L∆∞u √Ω: RelayModule v√† LedIndicator kh√¥ng c√≥ h√†m begin(),
  // n√™n kh√¥ng c·∫ßn g·ªçi pumpRelay.begin() hay error.begin() ·ªü ƒë√¢y.
}

void loop() {
  // N·∫øu WiFi ch∆∞a k·∫øt n·ªëi, c·ªë g·∫Øng k·∫øt n·ªëi l·∫°i
  if (!wifi.isConnected()) {
    Serial.println("WiFi ch∆∞a k·∫øt n·ªëi, ƒëang c·ªë g·∫Øng k·∫øt n·ªëi l·∫°i...");
    error.blink(1);
    wifi.connect();
  }

  // M·ªü b∆°m relay 5 gi√¢y, sau ƒë√≥ t·∫Øt
  Serial.println("üíß B·∫≠t b∆°m relay trong 5 gi√¢y");
  pumpRelay.turnOn();
  delay(5000);
  pumpRelay.turnOff();
  Serial.println("üíß ƒê√£ t·∫Øt b∆°m relay");

  // --- ƒê·ªçc nhi·ªát ƒë·ªô n∆∞·ªõc t·ª´ DS18B20 ---
  float waterTemp = ds18b20.getTemperature();
  if (isnan(waterTemp)) {
    // N·∫øu DS18B20 tr·∫£ NaN (thi·∫øt b·ªã ng·∫Øt/l·ªói), nh√°y LED 3 l·∫ßn
    error.blink(3);
    Serial.println("ERROR: DS18B20 disconnected or read failed!");
  }

  // --- ƒê·ªçc nhi·ªát ƒë·ªô v√† ƒë·ªô ·∫©m t·ª´ DHT22 ---
  float ambientTemp = dht.getTemperature();
  float humidity    = dht.getHumidity();
  if (isnan(ambientTemp) || isnan(humidity)) {
    // N·∫øu DHT22 tr·∫£ NaN (l·ªói ho·∫∑c g·ªçi qu√° s·ªõm), nh√°y LED 2 l·∫ßn
    error.blink(2);
    Serial.println("ERROR: DHT22 read failed (NaN).");
  }

  // In ra m√†n h√¨nh Serial
  Serial.print("üå°Ô∏è Nhi·ªát ƒë·ªô n∆∞·ªõc: ");
  if (!isnan(waterTemp)) {
    Serial.print(waterTemp);
    Serial.println(" ¬∞C");
  } else {
    Serial.println("--");
  }

  Serial.print("üå°Ô∏è Nhi·ªát ƒë·ªô m√¥i tr∆∞·ªùng: ");
  if (!isnan(ambientTemp)) {
    Serial.print(ambientTemp);
    Serial.println(" ¬∞C");
  } else {
    Serial.println("--");
  }

  Serial.print("üíß ƒê·ªô ·∫©m: ");
  if (!isnan(humidity)) {
    Serial.print(humidity);
    Serial.println(" %");
  } else {
    Serial.println("--");
  }

  // --- D·ªØ li·ªáu gi·∫£ ƒë·ªãnh cho pH, EC, ORP ---
  float ph  = 7.0;
  float ec  = 1.5;
  int   orp = 200;

  // --- T·∫°o JSON payload v√† g·ª≠i l√™n server ---
  size_t jsonLen = buildJsonSnapshots(
    jsonBuffer, sizeof(jsonBuffer),
    waterTemp, ambientTemp, humidity,
    ph, ec, orp
  );

  if (jsonLen > 0) {
    if (!api.sendData(jsonBuffer, jsonLen)) {
      Serial.println("‚ùå G·ª≠i d·ªØ li·ªáu API th·∫•t b·∫°i");
    } else {
      Serial.println("‚úÖ G·ª≠i d·ªØ li·ªáu API th√†nh c√¥ng");
    }
  } else {
    Serial.println("‚ùå T·∫°o JSON payload th·∫•t b·∫°i");
  }

  // --- (T√πy ch·ªçn) Ch·ª•p v√† g·ª≠i ·∫£nh l√™n server ---
  // camera_fb_t *fb = camera.capture();
  // if (fb) {
  //   if (api.sendImage(fb->buf, fb->len)) {
  //     Serial.println("‚úÖ G·ª≠i ·∫£nh th√†nh c√¥ng");
  //   } else {
  //     Serial.println("‚ùå G·ª≠i ·∫£nh th·∫•t b·∫°i");
  //   }
  //   camera.release(fb);  // Quan tr·ªçng
  // } else {
  //   Serial.println("‚ùå Kh√¥ng ch·ª•p ƒë∆∞·ª£c ·∫£nh");
  // }

  // Ch·ªù 60 gi√¢y tr∆∞·ªõc khi l·∫∑p l·∫°i
  delay(60000);
}
