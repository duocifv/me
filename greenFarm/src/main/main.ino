#include <Arduino.h>

#include "wifi_module.h"           // Module Wi-Fi c·ªßa b·∫°n
#include "camera_module.h"         // Module ch·ª•p ·∫£nh m·ªõi t·∫°o
#include "http_camera_module.h"     // Module g·ª≠i ·∫£nh m·ªõi t·∫°o

// Th√¥ng tin Wi-Fi (thay b·∫±ng SSID/PASS th·ª±c t·∫ø)
static const char* WIFI_SSID     = "Mai Lan T2";
static const char* WIFI_PASSWORD = "1234567899";

// Th√¥ng tin server API (theo v√≠ d·ª• c·ªßa b·∫°n)
static const char* SERVER_HOST    = "my.duocnv.top";
static const uint16_t SERVER_PORT = 443;  // HTTPS: 443 | HTTP: 80
static const char* SERVER_PATH    = "/v1/hydroponics/snapshots/images";

// Header ri√™ng (theo v√≠ d·ª• c·ªßa b·∫°n)
static const char* DEVICE_TOKEN = "esp32";
static const char* DEVICE_ID    = "device-001";

// ƒê·ªëi t∆∞·ª£ng module
WifiModule      wifiModule(WIFI_SSID, WIFI_PASSWORD);
CameraModule    cameraModule;
HttpCameraModule httpModule(SERVER_HOST, SERVER_PORT, SERVER_PATH, DEVICE_TOKEN, DEVICE_ID);

// Kho·∫£ng th·ªùi gian gi·ªØa c√°c l·∫ßn ch·ª•p g·ª≠i (ms)
const unsigned long UPLOAD_INTERVAL = 20000UL; // 20 gi√¢y

void setup() {
    Serial.begin(115200);
    delay(1000);
    Serial.println("=== B·∫Øt ƒë·∫ßu ESP32-CAM Test ===");

    // ---- 1. K·∫øt n·ªëi Wi-Fi ----
    wifiModule.connect(15000); // timeout 15s
    if (!wifiModule.isConnected()) {
        Serial.println("‚ùå Kh√¥ng k·∫øt n·ªëi Wi-Fi. D·ª´ng ch∆∞∆°ng tr√¨nh.");
        while (true) {
            delay(1000);
        }
    }

    // ---- 2. Kh·ªüi t·∫°o camera ----
    if (!cameraModule.init()) {
        Serial.println("‚ùå Kh·ªüi t·∫°o camera th·∫•t b·∫°i. D·ª´ng ch∆∞∆°ng tr√¨nh.");
        while (true) {
            delay(1000);
        }
    }

    // ---- 3. C·∫•u h√¨nh HttpModule (n·∫øu mu·ªën thay timeout) ----
    httpModule.setTimeout(8000); // ch·ªù t·ªëi ƒëa 8s khi ƒë·ªçc response

    Serial.println("üöÄ Ready to capture and upload!");
}

void loop() {
    // ---- 4. Ch·ª•p ·∫£nh ----
    camera_fb_t* fb = cameraModule.capture();
    if (fb) {
        // ---- 5. G·ª≠i ·∫£nh l√™n server ----
        bool ok = httpModule.send(fb);
        if (!ok) {
            Serial.println("‚ùå G·ª≠i ·∫£nh th·∫•t b·∫°i");
        }
        // ---- 6. Gi·∫£i ph√≥ng buffer ----
        cameraModule.release(fb);
    } else {
        Serial.println("‚ùå Kh√¥ng l·∫•y ƒë∆∞·ª£c frame ƒë·ªÉ g·ª≠i");
    }

    // ---- 7. ƒê·ª£i tr∆∞·ªõc khi ch·ª•p ti·∫øp ----
    Serial.printf("‚è±Ô∏è ƒê·ª£i %lums tr∆∞·ªõc khi ch·ª•p l·∫°i...\n", UPLOAD_INTERVAL);
    delay(UPLOAD_INTERVAL);
}
