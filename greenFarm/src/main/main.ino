#include <Arduino.h>

#include "wifi_module.h"
#include "api_module.h"
#include "dht_module.h"
#include "ds18b20_module.h"
#include "json_builder.h"
#include "relay_module.h"
#include "camera_module.h"
// #include "bh1750_module.h"
#include "led_indicator.h"

// Th√¥ng tin WiFi v√† API
const char *ssid = "Mai Lan T2";
const char *password = "1234567899";
const char *apiUrl = "https://my.duocnv.top/v1/hydroponics/snapshots";
const char *deviceToken = "esp32";
const char *deviceId = "device-001";

// Kh·ªüi t·∫°o c√°c module
WifiModule wifi(ssid, password);
ApiModule api(apiUrl, deviceToken, deviceId);
DHTModule dht;
DS18B20Module ds18b20;
// BH1750Module lightSensor;
RelayModule pumpRelay(12);
LedIndicator errorLed(4);
// CameraModule camera;

char jsonBuffer[512];

void indicateError(bool ds18b20Err, bool dhtErr) {
  if (ds18b20Err) errorLed.blink(3, 200);
  else if (dhtErr) errorLed.blink(2, 200);
  else errorLed.off();
}

void setup() {
  Serial.begin(115200);
  delay(1000);

  wifi.connect();
  dht.begin();
  ds18b20.begin();
  // lightSensor.begin();
  api.begin();
  // camera.begin();
}

void loop() {
  dht.update();

  // 2) ƒê·ªçc DS18B20 ‚Äì th√™m delay ƒë·ªÉ ch·∫Øc ch·∫Øn conversion xong
  ds18b20.getTemperature();  // g·ªçi requestTemperatures() b√™n trong
  delay(250);                // ch·ªù 200ms conversion cho ƒë·ªô ph√¢n gi·∫£i 10-bit
  float waterTemp = ds18b20.getTemperature();

  // 3) ƒê·ªçc DHT22 (gi√° tr·ªã ƒë√£ l∆∞u trong dht.update())
  float ambientTemp = dht.getTemperature();
  float humidity = dht.getHumidity();



  bool ds18b20Error = isnan(waterTemp);
  bool dhtError = isnan(ambientTemp) || isnan(humidity);

  if (ds18b20Error) Serial.println("ERROR: DS18B20 disconnected or read failed!");
  if (dhtError) Serial.println("ERROR: DHT22 read failed (NaN).");

  indicateError(ds18b20Error, dhtError);

  Serial.print("üå°Ô∏è Nhi·ªát ƒë·ªô n∆∞·ªõc: ");
  Serial.println(ds18b20Error ? "--" : String(waterTemp) + " ¬∞C");

  Serial.print("üå°Ô∏è Nhi·ªát ƒë·ªô m√¥i tr∆∞·ªùng: ");
  Serial.println(dhtError ? "--" : String(ambientTemp) + " ¬∞C");

  Serial.print("üíß ƒê·ªô ·∫©m: ");
  Serial.println(dhtError ? "--" : String(humidity) + " %");


  if (!wifi.isConnected()) {
    Serial.println("WiFi ch∆∞a k·∫øt n·ªëi, ƒëang c·ªë g·∫Øng k·∫øt n·ªëi l·∫°i...");
    errorLed.blink(1, 300);
    wifi.connect();
  }

  Serial.println("üíß B·∫≠t b∆°m relay trong 5 gi√¢y");
  pumpRelay.turnOn();
  delay(5000);
  pumpRelay.turnOff();
  Serial.println("üíß ƒê√£ t·∫Øt b∆°m relay");


  // D·ªØ li·ªáu gi·∫£ ƒë·ªãnh cho pH, EC, ORP
  float ph = 7.0;
  float ec = 1.5;
  int orp = 400;


  size_t jsonLen = buildJsonSnapshots(
    jsonBuffer, sizeof(jsonBuffer),
    waterTemp, ambientTemp, humidity,
    ph, ec, orp);

  if (jsonLen > 0) {
    if (api.sendData(jsonBuffer, jsonLen)) {
      Serial.println("‚úÖ G·ª≠i d·ªØ li·ªáu API th√†nh c√¥ng");
    } else {
      Serial.println("‚ùå G·ª≠i d·ªØ li·ªáu API th·∫•t b·∫°i");
    }
  } else {
    Serial.println("‚ùå T·∫°o JSON payload th·∫•t b·∫°i");
  }

  // delay 60 gi√¢y
  delay(60000);
}
