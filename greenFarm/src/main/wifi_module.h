#ifndef WIFI_MODULE_H
#define WIFI_MODULE_H

#include <WiFi.h>

class WifiModule {
public:
    WifiModule(const char* ssid, const char* password)
      : _ssid(ssid), _password(password) {}

    // Tham s·ªë timeout m·∫∑c ƒë·ªãnh 10 gi√¢y
    void connect(unsigned long timeoutMs = 10000) {
        Serial.print("üîå ƒêang k·∫øt n·ªëi WiFi: ");
        Serial.println(_ssid);

        // Ch·∫ø ƒë·ªô Station, x√≥a k·∫øt n·ªëi c≈©
        WiFi.mode(WIFI_STA);
        WiFi.disconnect(true);
        delay(100);

        // B·∫Øt ƒë·∫ßu k·∫øt n·ªëi
        WiFi.begin(_ssid, _password);

        unsigned long startAttemptTime = millis();

        // ƒê·ª£i k·∫øt n·ªëi trong th·ªùi gian timeout
        while (WiFi.status() != WL_CONNECTED && 
               millis() - startAttemptTime < timeoutMs) {
            delay(500);
            Serial.print(".");
        }
        Serial.println();

        if (WiFi.status() != WL_CONNECTED) {
            Serial.print("‚ùå K·∫øt n·ªëi WiFi th·∫•t b·∫°i (status=");
            Serial.print(WiFi.status());
            Serial.println(")");
            return;
        }

        Serial.print("‚úÖ K·∫øt n·ªëi th√†nh c√¥ng! IP: ");
        Serial.println(WiFi.localIP());
    }

    bool isConnected() {
        return WiFi.status() == WL_CONNECTED;
    }

    void disconnect() {
        WiFi.disconnect();
        Serial.println("üîå WiFi ƒë√£ ng·∫Øt k·∫øt n·ªëi");
    }

private:
    const char* _ssid;
    const char* _password;
};

#endif // WIFI_MODULE_H
