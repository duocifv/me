#ifndef API_MODULE_H
#define API_MODULE_H

#include <WiFi.h>
#include <HTTPClient.h>
#include <ArduinoJson.h>

class ApiModule
{
private:
    const char *apiUrl;
    const char *deviceToken;
    const char *deviceId;
    HTTPClient http;

public:
    ApiModule(const char *url, const char *token, const char *id)
        : apiUrl(url), deviceToken(token), deviceId(id) {}

    // Tr·∫£ v·ªÅ lu√¥n true (kh√¥ng c·∫ßn thi·∫øt l·∫≠p state tr∆∞·ªõc)
    bool begin()
    {
        return true;
    }

    // M·ªói l·∫ßn g·ªçi s·∫Ω open + POST + parse + close
    bool sendData(const char *payload, size_t length)
    {
        if (WiFi.status() != WL_CONNECTED)
        {
            Serial.println("üö´ WiFi ch∆∞a k·∫øt n·ªëi");
            return false;
        }

        // M·ªü k·∫øt n·ªëi
        http.begin(apiUrl);
        http.addHeader("Content-Type", "application/json");
        http.addHeader("x-device-token", deviceToken);
        http.addHeader("x-device-id", deviceId);

        // G·ª≠i POST
        int code = http.POST((uint8_t *)payload, length);

        if (code > 0)
        {
            Serial.printf("‚úÖ Response code: %d\n", code);
            String response = http.getString();
            Serial.println("Response body:");
            Serial.println(response);

            // Parse n·∫øu mu·ªën
            if (response.length() > 0)
            {
                DynamicJsonDocument doc(1024);
                auto err = deserializeJson(doc, response);
                if (err)
                {
                    Serial.print("‚ùå L·ªói parse JSON: ");
                    Serial.println(err.c_str());
                    http.end();
                    return false;
                }
            }

            // ƒê√≥ng k·∫øt n·ªëi sau th√†nh c√¥ng
            http.end();
            return true;
        }

        // N·∫øu l·ªói POST
        Serial.printf("‚ùå POST l·ªói: %s\n", http.errorToString(code).c_str());
        http.end(); // ƒê√≥ng k·∫øt n·ªëi ngay c·∫£ khi l·ªói
        return false;
    }

    // G·ªçi khi deep-sleep ho·∫∑c tr∆∞·ªõc khi t·∫Øt module
    void endConnection()
    {
        http.end();
    }
};

#endif // API_MODULE_H
